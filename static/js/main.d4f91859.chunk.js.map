{"version":3,"sources":["components/common/AppBar.js","components/common/sidebarHeading.js","App.js","serviceWorker.js","index.js"],"names":["AppBar","props","react_default","a","createElement","Box","Object","assign","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","WrapList","styled","ul","_templateObject","WrapHeadings","Heading","_templateObject2","WrapDiv","div","_templateObject3","sideBarHeading","key","level","margin","color","headingTitle","arrList","allList","map","listValue","i","getList","theme","global","colors","brand","font","family","size","height","WrapInitialBox","App_templateObject","imageurl","WrapSideBox","App_templateObject2","WrapBody","App_templateObject3","WrapBodyLeft","_templateObject4","WrapBodyRight","_templateObject5","WrapImage","Image","_templateObject6","WrapBody2","_templateObject7","WrapDivisor","_templateObject8","WrapHeadingReview","_templateObject9","WrapParagraph","p","_templateObject10","App","console","log","process","arrProjects","companyName","technologies","Grommet","full","ResponsiveContext","Consumer","fill","common_AppBar","flex","overflow","horizontal","src","textAlign","width","project","sidebarHeading","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4f91859.chunk.js","sourcesContent":["import React from 'react';\nimport { Box } from 'grommet';\n\n\nconst AppBar = (props) => (\n    <Box\n      tag='header'\n      direction='row'\n      align='center'\n      justify='between'\n      background=\"black\"\n      pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n      elevation='medium'\n      style={{ zIndex: '1' }}\n      {...props}\n    />\n);\n\nexport default AppBar;","import React from 'react';\nimport styled from 'styled-components';\nimport { Heading } from 'grommet';\n\nconst WrapList = styled.ul`\n    color: black;\n    font-weight: bolder;\n    list-style-type: none;\n    font-size: 1.3em;\n    margin-top:0.2em;\n    height: 230px;\n    transition: 0.4s;\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    &:hover{\n        font-size: 1.6em;\n        line-height: 40px;\n        height: 295px;\n        @media (max-width: 768px) {\n            font-size: 1.3em;\n        }\n    }\n    li{\n        &:first-child {\n            margin-top:12px;\n        }\n    }\n\n    @media (max-width: 768px) {\n        font-size: 1em;\n        line-height: 22px;\n        display: block;\n        &:hover{\n            line-height: 28px;\n            font-size: 1.15em;\n        }\n    }`;\n    \n\nconst WrapHeadings = styled(Heading)`\n    font-size: 1.6em;\n    text-align: left;\n    margin:0 5%;\n    color: #EBB11A;\n    max-width:100%;\n    margin-top: 0.5em;\n    text-decoration:underline;\n    @media (max-width: 768px) {\n        font-size: 1.6em;\n    }`;\n\nconst WrapDiv = styled.div `\n    width: 40%;\n    display: inline-block;\n    margin:0 4%;\n    vertical-align: top;\n    border: 1px solid silver;\n    border-radius: 30px;\n    background:white\n    opacity:0.85;\n    margin-bottom: 30px;\n    @media (max-width: 768px) {\n        width: 90%;\n    }\n`\n\nconst getList = (arrList,key) => {\n    const allList = arrList.map((listValue, i) => {\n        return <li key={i}>{listValue}</li>\n    })\n    return <WrapList key={\"wl\" + key}>{allList}</WrapList>;\n}\n\nconst sideBarHeading = (props) => {\n    return (\n        <WrapDiv>\n             <WrapHeadings key={'wrp' + props.key} level={props.level} margin='none' color={props.color} >{props.headingTitle}</WrapHeadings>\n                {getList(props.arrList, props.key)}\n        </WrapDiv>\n    );\n}\n\nexport default sideBarHeading;","import React, { Component } from 'react';\nimport { \n  Box,\n  Heading, \n  Image,\n  Grommet, \n  ResponsiveContext \n} from 'grommet';\nimport AppBar from './components/common/AppBar';\nimport styled from 'styled-components';\nimport SideBarHeading from './components/common/sidebarHeading';\n\nconst theme = {\n  global: {\n    colors: {\n      brand: '#228BE6',\n    },\n    font: {\n      family: 'Roboto',\n      size: '20px',\n      height: '30px',\n    },\n    color: 'white'\n  },\n};\n\n\nconst WrapInitialBox = styled(Box)`\n  background: ${(props) => 'url(' + props.imageurl+ '/BGWIN2.jpg)no-repeat;'}\n  background-size:cover;\n`\n\nconst WrapSideBox = styled(Box) `\n  opacity: .85;\n  width:100%;\n  display:table;\n  padding:1em 0;\n  &:hover{\n    opacity: 1;\n  }\n`;\n\nconst WrapBody = styled.div`\n  float:left;\n  display:table;\n`\n\nconst WrapBodyLeft = styled.div `\n  width: 11%;\n  display:table-cell;\n  vertical-align: middle;\n  line-height: 0;\n  @media (max-width: 768px) {\n    display: block;\n    width: 85%;\n    margin: auto;\n  }\n  @media (max-width: 1024px) {\n    width: 20%\n  }\n`;\n\nconst WrapBodyRight = styled.div `\n  width: 89%;\n  display:table-cell;\n  vertical-align: middle;\n  padding-left: 1%;\n  @media (max-width: 768px) {\n    width: 96%;\n    margin: 0 7px;\n    display: block;\n  }\n  @media (max-width: 1024px) {\n    width: 80%;\n    font-size: 12px;\n  }\n`;\n\nconst WrapImage = styled(Image)`\n  width:100%;\n  -webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */\n  filter: grayscale(100%);\n  border-radius: 10px;\n  @media (max-width: 768px) {\n    width:100%;\n  }\n`\n\nconst WrapBody2 = styled.div`\n  width: 100%;\n`\n\nconst WrapDivisor = styled.div `\n  height: 20px;\n  background: black;\n  width: 100%;\n  min-height: 70px;\n  margin-bottom: 25px;\n  h2{\n    max-width:100%;\n    line-height: 14px;\n  }\n`\n\nconst WrapHeadingReview = styled(Heading)`\n  background-color: white;\n  max-width:200px;\n  border-radius:10px;\n  padding-left:10px;\n`\n\nconst WrapParagraph = styled.p`\n  margin-right: 25px;\n  background-color: white;\n  border-radius: 10px;\n  padding: 0 20px;\n  opacity: 0.9;\n  margin-bottom: 50px;\n  width: 89%;\n`\n\nclass App extends Component {\n  render() {\n    console.log('URL: ', process.env.PUBLIC_URL)\n    const arrProjects = [\n      {'companyName': 'Janeiro Digital', 'technologies' : ['C#', 'MS SQL', 'Azure', 'React.js', 'Phyton']},\n      {'companyName': 'Mapache Apps', 'technologies' : ['React.js', 'React-Redux', 'Redux-Thunk', 'Mbox', 'D3.js', 'React-Bootstrap','Styled-Components','Node.js', 'Express', 'Tedius', 'MS SQL']},\n      {'companyName': 'Baires Dev', 'technologies' : ['React.js', 'React-Redux', 'Redux-Thunk', 'Jasmine', 'Docker']},\n      {'companyName': 'See Saw Labs', 'technologies' : ['React.js', 'React-Redux', 'Redux-Thunk', 'React Native', 'MongoDB', 'SASS', 'LESS' ]},\n      {'companyName': 'Qwinix', 'technologies' : ['Angular 1.x', 'Ruby', 'PostgreSQL', 'Moment.js', 'CSS3', 'HTML5']},\n      {'companyName': 'Other knowledge', 'technologies' : ['Next.js' ,'Vue.js', 'ASP MVC 5', 'Reporting Services (SSRS)', 'C++','Action Script', 'Visual Basic']},\n    ]\n    return (\n      <Grommet theme={theme} full>\n        <ResponsiveContext.Consumer>\n        {size => (\n          <Box fill>\n            <AppBar>\n                <Heading level='1' margin='none' color='aqua' >Luis Diego Jimenez - Senior Full Stack Developer</Heading>\n            </AppBar>\n            <WrapInitialBox direction='row' flex overflow={{ horizontal: 'hidden' }} imageurl={process.env.PUBLIC_URL}>\n              <Box flex align='center' justify='start'>\n                <WrapBody>\n                  <WrapBodyLeft>\n                    <WrapImage src={process.env.PUBLIC_URL + '/myphoto.jpg'}></WrapImage>\n                  </WrapBodyLeft>\n                  <WrapBodyRight>\n                    <WrapHeadingReview level='2' color='black'>Review</WrapHeadingReview>\n                    <WrapParagraph>\n                      I am a developer with more than 17 years of experience, throughout my career I have participated in different types of projects such as point of sale, \n                      ecommerce web sites, marketing intelligence solutions and mobile applications among others.<br/>\n                      In recent years, I have been working with native react and react as frontend and backend with Node.js and C # developing applications with different tools \n                      and associated libraries.<br/>\n                      I have formed different types of extensive work of 40 or more developers or individuals. I have had to work with environments where I have had to develop \n                      all the solution for a client from the taking of requirements, prototyping, backend, frontend and implementation. Most of the projects where the work teams \n                      are large I have had to work with pure Agile mode or with their different adaptations to the environment.<br/>\n                      As a developer I try to focus on the requirements of the clients to be able to create solutions that meet their needs and thus be able to create agile and modern \n                      applications.\n                    </WrapParagraph>\n                  </WrapBodyRight>\n                </WrapBody>\n                <WrapDivisor>\n                  <Heading level=\"2\" color=\"white\" textAlign=\"center\">Last Projects & Technologies</Heading>\n                </WrapDivisor>\n                <WrapBody2>\n                  <WrapSideBox\n                      flex\n                      width='medium'\n                      elevation='small'\n                      align='center'\n                      justify='center'\n                      color='white'\n                    >\n                    {\n                      arrProjects.map((project, i)=>{\n                        return <SideBarHeading key={i} level='3' color='black' headingTitle={project.companyName} arrList={project.technologies} />  \n                      })\n                    }\n                  </WrapSideBox>\n                </WrapBody2>\n              </Box>\n            </WrapInitialBox>\n          </Box>\n          )}\n        </ResponsiveContext.Consumer>\n      </Grommet>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}